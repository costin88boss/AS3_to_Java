package blitter{	import flash.display.BitmapData;		public class BlContainer extends BlObject	{		protected var content:Array = []		public var target:BlObject;						public function add(o:BlObject):BlObject{			content.push(o);			return o;		}				public function addAt(o:BlObject, index:int):BlObject{			content.splice(index, 0, o);			return o		}				public function addBefore(o:BlObject, target:BlObject):BlObject{			for( var a:int=0;a<content.length;a++){				if(content[a] == target){					return addAt(o, a)				}			}			return add(o);		}				public function remove(o:BlObject):BlObject{			for( var a:int=0;a<content.length;a++){				if(content[a] === o){					content.splice(a,1);					break;				}						}			return o;		}				public function removeAll():void		{			content = [];		}				public function get children():Vector.<BlObject>{			var ret:Vector.<BlObject>  = new Vector.<BlObject>			for(var a:int=0;a<content.length;a++){				ret[a] = content[a];			}			return ret;		}				public function offset(x:int, y:int):void{			this.x += x;			this.y += y;		}				public override function tick():void{			for each(var o:BlObject in content){				o.tick();			}			super.tick();			if(target != null){				//this.x = -target.x + Bl.width/2				//this.y = -target.y + Bl.height/2				this.x -= (this.x - ((-target.x) + Bl.width/2)) * Config.camera_lag;				this.y -= (this.y - ((-target.y) + Bl.height/2)) * Config.camera_lag;				if (Math.abs(this.x - ( -target.x + Bl.width / 2))  < 0.5) this.x = -target.x + Bl.width / 2;				if (Math.abs(this.y - ( -target.y + Bl.height / 2)) < 0.5) this.y = -target.y + Bl.height / 2;			}		}				public override function exitFrame():void{			for each(var o:BlObject in content){				o.exitFrame();			}		}				public override function enterFrame():void{			for each(var o:BlObject in content){				o.enterFrame();			}		}				public override function draw(target:BitmapData, ox:int, oy:int) : void{						for each(var o:BlObject in content){				o.draw(target, (ox+x), (oy+y));			}		}	}}